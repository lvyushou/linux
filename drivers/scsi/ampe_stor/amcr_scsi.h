#ifndef __AMCR_SCSI_H
#define __AMCR_SCSI_H



// bErr
#define ERROR_STATE										0x80000000
#define CHIP_STATE_ERROR_HOST_REQUEST_MORE_DATA			0x81000000	/* bit31: 1, indicate chip ERROR STATE */
#define CHIP_STATE_ERROR_INVALID_CBW_CMD				0x82000000
#define CHIP_STATE_ERROR_INVALID_SCSI_CMD				0x83000000
#define CHIP_STATE_ERROR_SCSI_PARAMETER_VALUE_INVALID	0x84000000
#define CHIP_STATE_ERROR_MEDIUM_NOT_PRESENT				0x85000000
#define CHIP_STATE_ERROR_MEDIUM_CHANGE					0x86000000
#define CHIP_STATE_ERROR_MEDIUM_WRITE_PROTECT			0X87000000
#define CHIP_STATE_ERROR_MEDIUM_BUSY					0x88000000
#define CHIP_STATE_ERROR_MEDIUM_ERROR					0x89000000
#define CHIP_STATE_ERROR_ADDRESS_OUT_OF_RANGE			0x8A000000

#define CHIP_STATE_ERROR_UNRECOVERED_READ_ERROR						0x8B000000
#define	CHIP_STATE_ERROR_LOGICAL_DRIVE_NOT_READY					0x8C000000
#define CHIP_STATE_ERROR_INVALID_FIELD_IN_COMMAND_PACKET			0x8D000000
#define	CHIP_STATE_ERROR_LOGICAL_UNIT_NOT_READY_FORMAT_IN_PROGRESS	0x8E000000
#define	CHIP_STATE_ERROR_FORMAT_COMMAND_FAILED						0x8F000000

#define CHIP_STATE_ERROR_COPY_PROTECTION_KEY_EXCHANGE_AUTHENTICATION_FAILURE	0x90000000
#define CHIP_STATE_ERROR_WRITE_ERROR											0x91000000
#define CHIP_STATE_ERROR_INCOMPATIBLE_MEDIUM_INSTALLED							0x92000000


/* Sense data of error state  */
#define SENSE_KEY_INVALID_CBW_CMD				0x05
#define ASC_INVALID_CBW_CMD						0x26
#define ASCQ_INVALID_CBW_CMD					0x00

#define SENSE_KEY_INVALID_SCSI_CMD				0x05
#define ASC_INVALID_SCSI_CMD					0x20
#define ASCQ_INVALID_SCSI_CMD					0x00

#define SENSE_KEY_SCSI_PARAMETER_VALUE_INVALID	0x05
#define ASC_SCSI_PARAMETER_VALUE_INVALID		0x26
#define ASCQ_SCSI_PARAMETER_VALUE_INVALID		0x02

#define SENSE_KEY_MEDIUM_NOT_PRESENT			0x02
#define ASC_MEDIUM_NOT_PRESENT					0x3A
#define ASCQ_MEDIUM_NOT_PRESENT					0x00

#define SENSE_KEY_MEDIUM_CHANGE					0x06
#define ASC_MEDIUM_CHANGE						0x28
#define ASCQ_MEDIUM_CHANGE						0x00

#define SENSE_KEY_MEDIUM_WRITE_PROTECT			0x07
#define ASC_MEDIUM_WRITE_PROTECT				0x27
#define ASCQ_MEDIUM_WRITE_PROTECT				0x00

#define SENSE_KEY_MEDIUM_BUSY					0x02
#define ASC_MEDIUM_BUSY							0x04
#define ASCQ_MEDIUM_BUSY						0xFF

#define SENSE_KEY_MEDIUM_ERROR					0x02
#define ASC_MEDIUM_ERROR						0xFF
#define ASCQ_MEDIUM_ERROR						0xFF

#define SENSE_KEY_ADDRESS_OUT_OF_RANGE			0x05
#define ASC_ADDRESS_OUT_OF_RANGE				0x21
#define ASCQ_ADDRESS_OUT_OF_RANGE				0x00

// Magicgate
#define SENSE_KEY_UNRECOVERED_READ_ERROR		0x03
#define ASC_UNRECOVERED_READ_ERROR				0x11
#define ASCQ_UNRECOVERED_READ_ERROR				0x00
// MagicGate  Sense Key define
// CHIP_STATE_ERROR_WRITE_ERROR
#define SENSE_KEY_WRITE_ERROR										0x03
#define ASC_WRITE_ERROR												0x0C
#define ASCQ_WRITE_ERROR											0x00

#define SENSE_KEY_PROTECTION_KEY_EXCHANGE_AUTHENTICATION_FAILURE	0x05
#define ASC_KEY_EXCHANGE_AUTHENTICATION_FAILURE						0x6F
#define ASCQ_KEY_EXCHANGE_AUTHENTICATION_FAILURE					0x00

// CHIP_STATE_ERROR_INCOMPATIBLE_MEDIUM_INSTALLED
#define SENSE_KEY_INCOMPATIBLE_MEDIUM_INSTALLED						0x02
#define ASC_KEY_INCOMPATIBLE_MEDIUM_INSTALLED						0x30
#define ASCQ_KEY_INCOMPATIBLE_MEDIUM_INSTALLED						0x00

#define SENSE_KEY_LOGICAL_DRIVE_NOT_READY		0x02
#define ASC_LOGICAL_DRIVE_NOT_READY				0x04
#define ASCQ_LOGICAL_DRIVE_NOT_READY			0x01

#define SENSE_KEY_INVALID_FIELD_IN_COMMAND_PACKET	0x05
#define ASC_INVALID_FIELD_IN_COMMAND_PACKET			0x24
#define ASCQ_INVALID_FIELD_IN_COMMAND_PACKET		0x00

#define SENSE_KEY_LOGICAL_UNIT_NOT_READY_FORMAT_IN_PROGRESS		0x02
#define ASC_LOGICAL_UNIT_NOT_READY_FORMAT_IN_PROGRESS			0x04
#define ASCQ_LOGICAL_UNIT_NOT_READY_FORMAT_IN_PROGRESS			0x04

#define SENSE_KEY_FORMAT_COMMAND_FAILED		0x03
#define ASC_FORMAT_COMMAND_FAILED			0x31
#define ASCQ_FORMAT_COMMAND_FAILED			0x01

/* Scsi command constant */
#define PREVENT_REMOVAL						0x01


/* Eject Flag */
#define LOEJ_START					0x03
#define UNLOAD_MEDIUM				0x02







void scsi_show_command(struct scsi_cmnd *srb);

int scsi_handler(struct scsi_cmnd *srb, struct _DEVICE_EXTENSION *pdx);
void amcr_invoke_transport(struct scsi_cmnd *srb, struct _DEVICE_EXTENSION *pdx);












#endif
